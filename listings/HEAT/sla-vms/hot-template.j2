{% if floatings_list == '' and floating_start != '' %}
{% set float_last_oct = floating_start.split('.')[3] | int %}
{% set float_3oct = floating_start.split('.')[0:3] %}
{% endif %}
description: Sla VM's stack
heat_template_version: '2016-04-08'
parameters:
  flavor:
    constraints:
    - custom_constraint: nova.flavor
    default: {{ flavor }}
    type: string
  public_net:
    type: string
    description: >
      Name of public network for which floating IP addresses will be allocated
    default: {{ public_network }}
  image:
    constraints:
    - custom_constraint: glance.image
    default: {{ image }}
    type: string
  private_network:
    constraints:
    - custom_constraint: neutron.network
    default: {{ private_network }}
    type: string
{% if additional_networks is defined and additional_networks | length != 0 %}
{% for n in range(additional_networks| length) %}
  additional_network_{{ n }}:
    constraints:
    - custom_constraint: neutron.network
    default: {{ additional_networks[n] }}
    type: string
{% endfor %}{% endif %}
resources:
  sec_group:
    properties:
      description: allow prometheus pull trafic and icmp
      name:
        list_join:
        - '-'
        - - get_param: OS::stack_name
      rules:
{% if enable_ssh %}
      - direction: ingress
        protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
        port_range_min: 2200
        port_range_max: 2200
{% endif %}
      - direction: ingress
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: tcp
        remote_ip_prefix: 5.188.135.74/32
        port_range_min: 9100
        port_range_max: 9100
      - direction: ingress
        protocol: tcp
        remote_ip_prefix: 5.188.135.74/32
        port_range_min: 9116
        port_range_max: 9116
    type: OS::Neutron::SecurityGroup

  sla_server_group:
    type: OS::Nova::ServerGroup
    properties:
      name: sla-server-group
      policies: ['anti-affinity']

{% for i in range(cmp_cnt) %}
{% if floatings_list == '' and floating_start != '' %}
{% set float_last_oct = float_last_oct + i %}
{% set full_float = float_3oct | join('.') + '.' + float_last_oct | string %}
{% endif %}
{% set nm = (i + 1) | string %}
  host_{{ i }}:
    depends_on:
{% for i in range(cmp_cnt) %}
    - port_{{ i }}
{% endfor %}
    - host_{{ i }}_floating_ip
    properties:
      flavor:
        get_param: flavor
      image:
        get_param: image
      name:
        list_join:
        - '-'
        - - get_param: OS::stack_name
          - '{{ environment }}'
          - '{{ nm }}'
      scheduler_hints:
        group: { get_resource: sla_server_group }
      networks:
      - port:
          get_resource: port_{{ i }}
{% if additional_networks is defined and additional_networks | length != 0 %}
{% for n in range(additional_networks | length) %}
      - port:
          get_resource: additional_port_net_{{ n }}_{{ i }}
{% endfor %}{% endif %}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -ex
            echo "root:1q2w3e4r5t" | chpasswd
{% if additional_networks is defined and additional_networks | length != 0 %}
{% for n in range(additional_networks | length) %}{% set indx = (n + 1) | string %}
            cat <<EOT >> /etc/sysconfig/network-scripts/ifcfg-eth{{ indx }}
            DEVICE="eth{{ indx }}"
            ONBOOT="yes"
            PEERDNS="true"
            USERCTL="true"
            PERSISTENT_DHCLIENT="1"
            TYPE="Ethernet"
            BOOTPROTO="dhcp"
            NAME="eth{{ indx }}"
            GATEWAYDEV="eth0"
            EOT
            ifup eth{{ indx }}
{% endfor %}{% endif %}
            echo " - host: $FLOATADDRESS" >> /etc/ping_exporter/config.yaml
            echo "   alias: floating" >> /etc/ping_exporter/config.yaml
{% for I in range(cmp_cnt) %}{% if I != i %}
            echo " - host: $INTERNALIP{{ I }}" >> /etc/ping_exporter/config.yaml
            echo "   alias: internal" >> /etc/ping_exporter/config.yaml
{% endif %}{% endfor %}
{% if additional_hosts is defined and additional_hosts | length != 0 %}{% for key in additional_hosts %}
{% for hst in additional_hosts[key] %}
            echo " - host: {{ hst }}" >> /etc/ping_exporter/config.yaml
            echo "   alias: {{ key }}" >> /etc/ping_exporter/config.yaml
{% endfor %}{% endfor %}{% endif %}
            systemctl restart prometheus-ping_exporter.service
          params:
           $FLOATADDRESS: {get_attr: [host_{{ i }}_floating_ip, floating_ip_address]}
{% for I in range(cmp_cnt) %}{% if I != i %}
           $INTERNALIP{{ I }}: {get_attr: [ port_{{ I }}, fixed_ips, 0, ip_address ] }
{% endif %}{% endfor %}
    type: OS::Nova::Server
  port_{{ i }}:
    depends_on:
    - sec_group
    properties:
      network:
        get_param: private_network
      security_groups:
      - get_resource: sec_group
    type: OS::Neutron::Port
{% if additional_networks is defined and additional_networks | length != 0 %}
{% for n in range(additional_networks | length) %}
  additional_port_net_{{ n }}_{{ i }}:
    depends_on:
    - sec_group
    properties:
      network:
        get_param: additional_network_{{ n }}
      security_groups:
      - get_resource: sec_group
    type: OS::Neutron::Port
{% endfor %}{% endif %}
  host_{{ i }}_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: port_{{ i }} }
{% if floatings_list == '' and floating_start != '' %}
      floating_ip_address: {{ full_float }}
{% elif floatings_list != '' and floating_start == '' %}
      floating_ip_address: {{ floatings_list[i] }}
{% endif %}
{% endfor %}
